Mapper_gmappingName - English
========================

.. toctree::
   :hidden:

   index_j


Introduction
============


For a full list of classes and functions, see the `API documentation`_.

.. _`API Documentation`:
   doxygen/html/index.html

Requirements
============

Mapper_gmapping uses the `CMake build system`. You will need at least version
2.8 to be able to build the component.

.. _`CMAke build system`:
   http://www.cmake.org


Installation
============

Binary
------

Users of Windows can install the component using the binary installer. This
will install the component and all its necessary dependencies. It is the
recommended method of installation in Windows.

- Download the installer from the website.
- Double-click the executable file to begin installation.
- Follow the instructions to install the component.
- You may need to restart your computer for environment variable changes
  to take effect before using the component.

The component can be launched by double-clicking the
``Mapper_gmappingComp`` executable. The ``Mapper_gmapping`` library
is available for loading into a manager, using the initialisation function
``Mapper_gmappingInit``.

From source
-----------

Follow these steps to install Mapper_gmapping from source in any operating
system:

- Download the source, either from the repository or a source archive,
  and extract it somewhere::

    tar -xvzf Mapper_gmapping-1.0.0.tar.gz

- Change to the directory containing the extracted source::

    cd Mapper_gmapping-1.0.0

- Create a directory called ``build``::

    mkdir build

- Change to that directory::

    cd build

- Run cmake or cmake-gui::

    cmake ../

- If no errors occurred, run make::

    make

- Finally, install the component. Ensure the necessary permissions to
  install into the chosen prefix are available::

    make install

- The install destination can be changed by executing ccmake and changing
  the variable ``CMAKE_INSTALL_PREFIX``::

    ccmake ../

The component is now ready for use. See the next section for instructions on
configuring the component.

Mapper_gmapping can be launched in stand-alone mode by executing the
``Mapper_gmappingComp`` executable (installed into ``${prefix}/components/bin``).
Alternatively, ``libMapper_gmapping.so`` can be loaded into a manager, using the
initialisation function ``Mapper_gmappingInit``. This shared object can be found in
``${prefix}/components/lib`` or ``${prefix}/components/lib64``.


Configuration
=============

The available configuration parameters are described below:

================ ================== ================ ======
Parameter        Data type          Default Value    Effect
================ ================== ================ ======
debug            int                0                
sigma            float              0.05             The sigma used by the greedy endpoint matching
kernelSize       int                1                The kernel in which to look for a correspondence
lstep            float              0.05             The optimization step in translation
astep            float              0.05             The optimization step in rotation
iterations       int                5                 The number of iterations of the scanmatcher
lsigma           float              0.075            The sigma of a beam used for likelihood computation
ogain            float              3.0              Gain to be used while evaluating the likelihood, for smoothing the resampling effects
lskip            int                0                 Number of beams to skip in each scan.
minimumScore     float              0.0              Minimum score for considering the outcome of the scan matching good. Can avoid jumping pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m). Scores go up to 600+, try 50 for example when experiencing jumping estimate issues.
srr              float              0.1              Odometry error in translation as a function of translation (rho/rho)
srt              float              0.2              Odometry error in translation as a function of rotation (rho/theta)
str              float              0.1              Odometry error in rotation as a function of translation (theta/rho)
stt              float              0.05             Odometry error in rotation as a function of rotation (theta/theta)
linearUpdate     float              1.0              Process a scan each time the robot translates this far
angularUpdate    float              0.5              Process a scan each time the robot rotates this far
temporalUpdate   float              -1.0             Process a scan if the last scan proccessed is older than the update time in seconds. A value less than zero will turn time based updates off.
resampleThreshold float              0.5              The Neff based resampling threshold
particles        int                30               Number of particles in the filter
xmin             float              -100             Initial map size
ymin             float              -100             Initial map size
xmax             float              100              Initial map size
ymax             float              100              Initial map size
delta            float              0.05             Processing parameters (resolution of the map)
llsamplerange    float              0.01             Translational sampling range for the likelihood
llsamplestep     float              0.01             Translational sampling step for the likelihood
lasamplerange    float              0.005            Angular sampling range for the likelihood
lasamplestep     float              0.005            Angular sampling step for the likelihood
transform_publish_period float              0.05             How long (in seconds) between transform publications.
occ_thresh       float              0.25             Threshold on gmapping's occupancy values. Cells with greater occupancy are considered occupied (i.e., set to 100 in the resulting sensor_msgs/LaserScan).
throttle_scans   int                1                throttle_scans
map_update_interval float              5.0              How long (in seconds) between updates to the map. Lowering this number updates the occupancy grid more often, at the expense of greater computational load.
================ ================== ================ ======

Ports
=====

The ports provided by the component are described below:

=============== =========== ============================== =======
Name            Type        Data type                      Purpose
=============== =========== ============================== =======
range           InPort      RTC::RangeData                 
odometry        InPort      RTC::TimedPose2D               
estimatedPose   OutPort     RTC::TimedPose2D               
OGMapper        ServicePort NAVIGATION::OccupancyGridMapper 
NAVIGATION_OccupancyGridMapServer ServicePort NAVIGATION::OccupancyGridMapServer 
=============== =========== ============================== =======

Examples
========

An example configuration file is provided in the
``${prefix}/components/share/Mapper_gmapping/examples/conf/`` directory.

Changelog
=========



License
=======

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

